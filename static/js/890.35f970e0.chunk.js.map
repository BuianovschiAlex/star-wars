{"version":3,"file":"static/js/890.35f970e0.chunk.js","mappings":"oNACA,EAA0B,6BAA1B,EAAyE,qCAAzE,EAA2H,gCAA3H,EAA2K,mCAA3K,EAA4N,iCAA5N,EAA2Q,iC,SC0C3Q,EArCoB,SAAHA,GAAyB,IAAnBC,EAAWD,EAAXC,YACrBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAW9B,OATAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC4C,OAArCL,EAAQZ,EAAYkB,KAAI,SAACC,GAAG,OAAKA,CAAG,IAACJ,EAAAE,KAAA,GACpBG,EAAAA,EAAAA,GAAsBR,GAAO,KAAD,EAA7CC,EAAQE,EAAAM,KAEdf,EAAaO,GAAU,wBAAAE,EAAAO,OAAA,GAAAX,EAAA,IAJzBH,EAMF,GAAG,KAGDe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAeF,UAC7BF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAuBF,SACnCpB,EACEuB,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,WAAaD,EAAEC,UAAU,IAC1Cb,KAAI,SAAAc,GAAA,IAAGC,EAAKD,EAALC,MAAOF,EAAUC,EAAVD,WAAU,OACvBG,EAAAA,EAAAA,MAAA,MAAIR,UAAWC,EAAkBF,SAAA,EAC/BS,EAAAA,EAAAA,MAAA,QAAMR,UAAWC,EAAqBF,SAAA,CAAC,WAC5BM,MAEXR,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAmBF,SAAC,SACrCF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAmBF,SAAEQ,MALDF,EAMlC,SAMnB,C","sources":["webpack://react-star-wars/./src/components/PersonPage/PersonFilms/PersonFilms.module.css?02f6","components/PersonPage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PersonFilms_wrapper__I-kYf\",\"list__container\":\"PersonFilms_list__container__eyG8R\",\"list__item\":\"PersonFilms_list__item__HAFxt\",\"item__episode\":\"PersonFilms_item__episode__kJGFY\",\"item__colon\":\"PersonFilms_item__colon__-rbL+\",\"item__title\":\"PersonFilms_item__title__75iiB\"};","import PropTypes from \"prop-types\";\nimport { makeConcurrentRequest } from \"../../../utils/network\";\nimport { useEffect, useState } from \"react\";\n\nimport styles from \"./PersonFilms.module.css\";\n\nconst PersonFilms = ({ personFilms }) => {\n  const [filmsName, setFilmsName] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const films = personFilms.map((url) => url);\n      const response = await makeConcurrentRequest(films);\n\n      setFilmsName(response);\n    })();\n  }, []);\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <ul className={styles.list__container}>\n          {filmsName\n            .sort((a, b) => a.episode_id - b.episode_id)\n            .map(({ title, episode_id }) => (\n              <li className={styles.list__item} key={episode_id}>\n                <span className={styles.item__episode}>\n                  Episode {episode_id}\n                </span>\n                <span className={styles.item__colon}> : </span>\n                <span className={styles.item__title}>{title}</span>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nPersonFilms.propTypes = {\n  personFilms: PropTypes.array,\n};\n\nexport default PersonFilms;\n"],"names":["_ref","personFilms","_useState","useState","_useState2","_slicedToArray","filmsName","setFilmsName","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","films","response","wrap","_context","prev","next","map","url","makeConcurrentRequest","sent","stop","_jsx","_Fragment","children","className","styles","sort","a","b","episode_id","_ref3","title","_jsxs"],"sourceRoot":""}